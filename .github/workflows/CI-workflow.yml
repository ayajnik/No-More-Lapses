# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: DL-workflow

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  Python-DL-workflow:

    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_URI: file:mlruns

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.8.18
      uses: actions/setup-python@v3
      with:
        python-version: "3.8.18"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Running the DL worflow
      run: |
        python main.py
    
    - name: Upload MLflow Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mlflow-logs
        path: mlruns/

    - name: Upload Log Files
      uses: actions/upload-artifact@v4
      with:
        name: logs
        path: logs/

  Upload-MLflow-Logs:
    if: ${{ always() }}
    needs: Python-DL-workflow
    runs-on: ubuntu-latest  # Define the runner for this job
    steps:
    - name: Upload MLFlow logs
      uses: actions/upload-artifact@v4  # Ensure artifact version is correct
      with:
        name: mlflow-logs
        path: mlruns/

  Upload-Project-Logs:
    if: ${{ always() }}
    needs: 
      - Python-DL-workflow
      - Upload-MLflow-Logs
    runs-on: ubuntu-latest  # Define the runner for this job
    steps:
    - name: Upload DL workflow logs
      uses: actions/upload-artifact@v4  # Ensure artifact version is correct
      with:
        name: logs
        path: logs/
    
